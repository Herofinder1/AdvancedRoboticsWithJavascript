var coordinates = 
[
	[0.2, -0.4, 0.5]   
]

var coordinates2 = 
[
	[0.2, -0.4, 0.1]
]

var init_pos = 
[
	[-0.2, 0.25, 0.5]
]

var open = 150;
var close = 30;

/*function claw_coordinates() 
{
	let cmds = []

	cmds.push(Dexter.move_to(init_pos[0], init_pos[1], init_pos[2]));
    cmds.push(Dexter.move_to(coordinates[0], coordinates[1], coordinates[2]));
    cmds.push(Dexter.move_to(coordinates2[0], coordinates2[1], coordinates2[2]));
    cmds.push(Dexter.move_to(coordinates[0], coordinates[1], coordinates[2]));
    cmds.push(Dexter.move_to(init_pos[0], init_pos[1], init_pos[2]));
    
    return cmds
}

new Job({
name: "claw_machine",
    do_list: [
    function(){return claw_coordinates()}]})*/
    
new Job({
	name: "gripper_test",
    do_list: 
    [
    	Dexter.set_parameter("RebootServo", 1),
    	Dexter.set_parameter("RebootServo", 3),
        
        Dexter.empty_instruction_queue(),
		Dexter.move_to(init_pos[0], init_pos[1], init_pos[2]),
        Dexter.empty_instruction_queue(),
        Dexter.move_to([[0], [0], [0]], undefined, undefined, undefined, close),
        
        Dexter.empty_instruction_queue(),
        Dexter.move_to(coordinates[0], coordinates[1], coordinates[2]),
        Dexter.empty_instruction_queue(),
        
    	Dexter.move_to([[0], [0], [0]], undefined, undefined, undefined, open),
        Dexter.empty_instruction_queue(),
	    Dexter.move_to(coordinates2[0], coordinates2[1], coordinates2[2]),
        Dexter.empty_instruction_queue(),
        
    	Dexter.move_to([[0], [0], [0]], undefined, undefined, undefined, close),
        Dexter.empty_instruction_queue(),
        Dexter.move_to(coordinates[0], coordinates[1], coordinates[2]),
        
        Dexter.empty_instruction_queue(),
        Dexter.move_to(init_pos[0], init_pos[1], init_pos[2]),
        Dexter.empty_instruction_queue(),
    	Dexter.move_to([[0], [0], [0]], undefined, undefined, undefined, open)
    ]
})
    